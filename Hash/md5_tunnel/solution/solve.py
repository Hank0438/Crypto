import sys
import os
import hashlib


key = os.urandom(32)

m = hashlib.md5()
prefix = "Crypto is fun" + " "*51
prefix = prefix.encode('ascii')
m.update(prefix)
print("partial:", m.digest())

### ./par_md5 prefix ###
'''
Partial MD5 is C08603BE 3CE1AA68 4B43510F 4B432744
Final MD5 is C7AB12D9 C9692A59 C4FA067E 52DDA4A5
'''

### ./md5-tunneling 0xC08603BE 0x3CE1AA68 0x4B43510F 0x4B432744 ###

m0 = [
0x2C,0x82,0x1A,0x71,0xAC,0x83,0xCF,0x84,0xF9,0xB6,0x5D,0xBA,0x2A,0x89,0xE4,0xEF,
0x9B,0x7C,0x26,0x0E,0x02,0x07,0xBC,0x42,0x51,0x00,0x1A,0x87,0xB9,0xF7,0x01,0xC2,
0xD5,0xAD,0x34,0x06,0x02,0xEC,0x34,0x81,0x03,0xFD,0x76,0x78,0x22,0x87,0x02,0x14,
0xFC,0x6E,0xE7,0xFF,0x13,0xEB,0x4A,0xEF,0x8E,0x33,0x4A,0x04,0x19,0x06,0x9A,0xB3,
0x51,0xD1,0xBD,0x09,0x34,0x45,0x97,0xFF,0xF9,0x67,0x50,0xD1,0xB4,0x5A,0x54,0x7A,
0xDB,0xD1,0x21,0xA5,0xCB,0x13,0x80,0xEC,0x1E,0xC9,0x66,0x47,0xC9,0xFB,0x11,0xFE,
0xDD,0x26,0x7C,0x6E,0x1A,0x8D,0x13,0x47,0x8A,0xC9,0x0D,0x6A,0x92,0xE8,0x99,0x9D,
0xE8,0x9C,0xB2,0x13,0x8F,0xAE,0x53,0x0B,0xF4,0x91,0x09,0x5B,0x56,0x53,0x04,0x2F
]

m1 = [
0x2C,0x82,0x1A,0x71,0xAC,0x83,0xCF,0x84,0xF9,0xB6,0x5D,0xBA,0x2A,0x89,0xE4,0xEF,
0x9B,0x7C,0x26,0x8E,0x02,0x07,0xBC,0x42,0x51,0x00,0x1A,0x87,0xB9,0xF7,0x01,0xC2,
0xD5,0xAD,0x34,0x06,0x02,0xEC,0x34,0x81,0x03,0xFD,0x76,0x78,0x22,0x07,0x03,0x14,
0xFC,0x6E,0xE7,0xFF,0x13,0xEB,0x4A,0xEF,0x8E,0x33,0x4A,0x84,0x19,0x06,0x9A,0xB3,
0x51,0xD1,0xBD,0x09,0x34,0x45,0x97,0xFF,0xF9,0x67,0x50,0xD1,0xB4,0x5A,0x54,0x7A,
0xDB,0xD1,0x21,0x25,0xCB,0x13,0x80,0xEC,0x1E,0xC9,0x66,0x47,0xC9,0xFB,0x11,0xFE,
0xDD,0x26,0x7C,0x6E,0x1A,0x8D,0x13,0x47,0x8A,0xC9,0x0D,0x6A,0x92,0x68,0x99,0x9D,
0xE8,0x9C,0xB2,0x13,0x8F,0xAE,0x53,0x0B,0xF4,0x91,0x09,0xDB,0x56,0x53,0x04,0x2F
]

print(len(m1))

def trans(mess):
    st = ''
    for _ in mess:
        s = hex(_)[2:]
        st += s.rjust(2, '0')
    return st


'''
print(trans(m0)==trans(m1))
print(trans(m0))
print(len(trans(m1)))
'''
print('========= usr ========')
m0 = trans(m0)
m1 = trans(m1)
#print('m0_len: ', len(m0))
#print('m1_len: ', len(m1))
usr = '20' * 51 + m0
usr1 = '20' * 51 + m1
#print('usr_len: ', len(usr))
#print('usr1_len: ', len(usr1))





print('usr: ', usr)
print('usr1: ', usr1)
print('usr == usr1: ', usr == usr1)
usr = bytes.fromhex(usr)
usr1 = bytes.fromhex(usr1)

print('========= mac ========')

mac = hashlib.md5(b'Crypto is fun' + usr + key).digest()
mac1 = hashlib.md5(b'Crypto is fun' + usr1 + key).digest()
print('mac: ', mac)
print('mac1: ', mac1)
print('mac == mac1: ', mac == mac1)
