def GaussLatticeReduction(v1, v2): 
    while True: 
        if v2.norm() < v1.norm(): 
            v1, v2 = v2, v1 
        m = round((v1*v2) / (v1.norm()^2)) 
        if m == 0: 
            return (v1, v2) 
        v2 = v2 - (m*v1)

h = 20672955843468978771992421225811724512615554261823277129197585394413927285243150392975976615860920382762395673755732125853683467237491678927810975708401570186761240091206345940822035058128799158697278102971326299201402600009523417766485076696603985516910699750471484627313917501926328590264567146818170998072016517303783813527325235481484172356989376932065409418652409622291931780334408578932361005128268077824075860223552772401630424244159319569929536853451415045925484261660605899683119677109544017321100681980053802746049457321824615225787750450538737439113049800494174291472841560234842993597476347268150934691157
p = 32127144760347819406109310095423589480766612800736258129363795997676699793327470527924610773519470937203888384611435402531599721994683426517447422945877147781898586061594865978586884096426646538237923544295147893468608522489446420853552144405368960767662054182528106888375966013738461556163583582152521355144890156612571964759423782300352542802424907586229688327609354073676758355563497034048389459496137616727496484038592304865681319231414346954205818911530570557949018430428804251188813712990580790062615559856544899131311421672477250500276880973020744169506188454607369060419092104673993872155117980088657375382701
c = 11453504198433034398309750703742712856340618457116857532512540487825485185778424330621903018362741168232894967582612286632519186865496757569589095788150720132672200206900340667210558499634653931004533193442587527512142059791614244012978239670754060997312464394029444733778773445092087962140162597626946647627886419859727376397070771253747277991950884562413162496545522183705798645476633223204040328457184852660629322291030083375557505701917791254780904415389956496446771215757201223299585309974736601118394637521125035575722435734392761534136929440763136156840892137134711295800335884645198160359916053155825991610252

# Construct lattice. 
v1 = vector(ZZ, [1, h]) 
v2 = vector(ZZ, [0, p]) 
m = matrix([v1, v2]);

# Solve SVP. 
v1 = vector(ZZ, [1, h]) 
v2 = vector(ZZ, [0, p]) 
m = matrix([v1, v2]); 
shortest_vector = m.LLL()[0] 
#shortest_vector = GaussLatticeReduction(v1, v2)[0] 
f, g = shortest_vector 
print(f, g)

# Decrypt. 
a = ((f * c) % p) % g 
m = a * inverse_mod(f, g) %  g 
print(m)
print(bytearray.fromhex(hex(m)[2:]).decode())


# flag{c3bb1f88-2c0b-48fc-9902-beada6d50df6}